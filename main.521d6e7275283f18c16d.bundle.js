(()=>{"use strict";const t=class{constructor(){this.lastTime=window.performance.now()}update(){let t=window.performance.now();this.physicsManager.update(t-this.lastTime),this.scene.update(t-this.lastTime),this.lastTime=t,this.scene.synchronize()}render(){this.scene.render()}run(){this.update(),this.render(),requestAnimationFrame((()=>this.run()))}},i=class{constructor(t){this.scene=t}addEventListener(t){document.addEventListener(t,(t=>{t.preventDefault(),this.scene.handleInput(t)}),!1)}},e=class{constructor(){this.rigidBodyList=[]}setAccelerationX(t){this.accelerationX=t}setAccelerationY(t){this.accelerationY=t}addRigidBodyList(t){this.rigidBodyList.push(t)}update(t){let i=t/1e3;this.rigidBodyList.forEach((t=>{t.getAccelerationEffect()?(t.setShiftX(Math.floor(.5*this.accelerationX*i*i+t.getVelocityX()*i)),t.setShiftY(Math.floor(.5*this.accelerationY*i*i+t.getVelocityY()*i)),t.setVelocityX(Math.floor(t.getVelocityX()+this.accelerationX*i)),t.setVelocityY(Math.floor(t.getVelocityY()+this.accelerationY*i))):(t.setShiftX(Math.floor(t.getVelocityX()*i)),t.setShiftY(Math.floor(t.getVelocityY()*i)))}))}},s=0,n=0,h=900,a=-5e3,r={x:200,y:368},o=100,c=500,l=0,d={x:1500,y:365},g=2e3,u=500,p=0,y={x:0,y:400},x=200,f=0,L={x:1500,y:340},w=2e3,R={x:1e3,y:250},S=100,m={multiply:function(t,i){let e=t[0],s=t[1],n=t[2],h=t[3],a=t[4],r=t[5],o=t[6],c=t[7],l=t[8],d=i[0],g=i[1],u=i[2],p=i[3],y=i[4],x=i[5],f=i[6],L=i[7],w=i[8];return[d*e+g*h+u*o,d*s+g*a+u*c,d*n+g*r+u*l,p*e+y*h+x*o,p*s+y*a+x*c,p*n+y*r+x*l,f*e+L*h+w*o,f*s+L*a+w*c,f*n+L*r+w*l]},translation:function(t,i){return[1,0,0,0,1,0,t,i,1]},rotation:function(t){let i=Math.cos(t),e=Math.sin(t);return[i,-e,0,e,i,0,0,0,1]},scaling:function(t,i){return[t,0,0,0,i,0,0,0,1]},projection:function(t,i){return[2/t,0,0,0,-2/i,0,-1,1,1]},translate:function(t,i,e){return m.multiply(t,m.translation(i,e))},rotate:function(t,i){return m.multiply(t,m.rotation(i))},scale:function(t,i,e){return m.multiply(t,m.scaling(i,e))}},E={translation:function(t,i,e){return[1,0,0,0,0,1,0,0,0,0,1,0,t,i,e,1]},xRotation:function(t){let i=Math.cos(t),e=Math.sin(t);return[1,0,0,0,0,i,e,0,0,-e,i,0,0,0,0,1]},yRotation:function(t){let i=Math.cos(t),e=Math.sin(t);return[i,0,-e,0,0,1,0,0,e,0,i,0,0,0,0,1]},zRotation:function(t){let i=Math.cos(t),e=Math.sin(t);return[i,e,0,0,-e,i,0,0,0,0,1,0,0,0,0,1]},scaling:function(t,i,e){return[t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1]},translate:function(t,i,e,s){return E.multiply(t,E.translation(i,e,s))},xRotate:function(t,i){return E.multiply(t,E.xRotation(i))},yRotate:function(t,i){return E.multiply(t,E.yRotation(i))},zRotate:function(t,i){return E.multiply(t,E.zRotation(i))},scale:function(t,i,e,s){return E.multiply(t,E.scaling(i,e,s))},multiply:function(t,i){let e=i[0],s=i[1],n=i[2],h=i[3],a=i[4],r=i[5],o=i[6],c=i[7],l=i[8],d=i[9],g=i[10],u=i[11],p=i[12],y=i[13],x=i[14],f=i[15],L=t[0],w=t[1],R=t[2],S=t[3],m=t[4],E=t[5],T=t[6],v=t[7],I=t[8],_=t[9],A=t[10],j=t[11],b=t[12],B=t[13],P=t[14],O=t[15];return[e*L+s*m+n*I+h*b,e*w+s*E+n*_+h*B,e*R+s*T+n*A+h*P,e*S+s*v+n*j+h*O,a*L+r*m+o*I+c*b,a*w+r*E+o*_+c*B,a*R+r*T+o*A+c*P,a*S+r*v+o*j+c*O,l*L+d*m+g*I+u*b,l*w+d*E+g*_+u*B,l*R+d*T+g*A+u*P,l*S+d*v+g*j+u*O,p*L+y*m+x*I+f*b,p*w+y*E+x*_+f*B,p*R+y*T+x*A+f*P,p*S+y*v+x*j+f*O]},projection:function(t,i,e){return[2/t,0,0,0,0,-2/i,0,0,0,0,2/e,0,-1,1,0,1]},orthographic:function(t,i,e,s,n,h){return[2/(i-t),0,0,0,0,2/(s-e),0,0,0,0,2/(n-h),0,(t+i)/(t-i),(e+s)/(e-s),(n+h)/(n-h),1]}},T={m3:m,m4:E,createShader:function(t,i,e){let s=t.createShader(i);if(t.shaderSource(s,e),t.compileShader(s),t.getShaderParameter(s,t.COMPILE_STATUS))return s;console.log(t.getShaderInfoLog(s)),t.deleteShader(s)},createProgram:function(t,i,e){let s=t.createProgram();if(t.attachShader(s,i),t.attachShader(s,e),t.linkProgram(s),t.getProgramParameter(s,t.LINK_STATUS))return s;console.log(t.getProgramInfoLog(s)),t.deleteProgram(s)},randomInt:function(t,i){let e=i-t+1;return Math.floor(Math.random()*e+t)}},v=class{constructor(t){this.gl=t.getContext("webgl"),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.enable(this.gl.BLEND),this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.clearColor(1,1,1,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.vertexSource="\nattribute vec4 a_position;\nattribute vec2 a_texcoord;\n\nuniform mat4 u_matrix;\nuniform mat4 u_textureMatrix;\n\nvarying vec2 v_texcoord;\n\nvoid main() {\n    gl_Position = u_matrix * a_position;\n    v_texcoord = (u_textureMatrix * vec4(a_texcoord, 0, 1)).xy;\n}\n",this.fragmentSource="\nprecision mediump float;\n\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\n\nvoid main() {\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n}\n";let i=T.createShader(this.gl,this.gl.VERTEX_SHADER,this.vertexSource),e=T.createShader(this.gl,this.gl.FRAGMENT_SHADER,this.fragmentSource);this.program=T.createProgram(this.gl,i,e),this.positionLocation=this.gl.getAttribLocation(this.program,"a_position"),this.texcoordLocation=this.gl.getAttribLocation(this.program,"a_texcoord"),this.matrixLocation=this.gl.getUniformLocation(this.program,"u_matrix"),this.textureMatrixLocation=this.gl.getUniformLocation(this.program,"u_textureMatrix"),this.textureLocation=this.gl.getUniformLocation(this.program,"u_texture"),this.positionBuffer=this.gl.createBuffer(),this.texcoordBuffer=this.gl.createBuffer()}loadImageAndCreateTextureInfo(t){let i=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,i),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,new Uint8Array([255,255,255,255])),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);let e={width:1,height:1,texture:i},s=new Image;return s.addEventListener("load",(t=>{e.width=s.width,e.height=s.height,this.gl&&(this.gl.bindTexture(this.gl.TEXTURE_2D,e.texture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,s))})),s.src=t,e}draw(t,i,e,s,n,h,a,r,o){this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,0,0,1,1,1]),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.texcoordBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,0,0,1,1,1]),this.gl.STATIC_DRAW);let c={x:110,y:110,dx:1,dy:1,textureInfo:t};this.gl&&this.drawImage(c.textureInfo.texture,c.textureInfo.width,c.textureInfo.height,i,e,s,n,h,a,r,o)}clear(){this.gl.clear(this.gl.COLOR_BUFFER_BIT)}drawImage(t,i,e,s,n,h,a,r,o,c,l){if(this.gl){this.gl.bindTexture(this.gl.TEXTURE_2D,t),this.gl.useProgram(this.program),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.enableVertexAttribArray(this.positionLocation),this.gl.vertexAttribPointer(this.positionLocation,2,this.gl.FLOAT,!1,0,0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.texcoordBuffer),this.gl.enableVertexAttribArray(this.texcoordLocation),this.gl.vertexAttribPointer(this.texcoordLocation,2,this.gl.FLOAT,!1,0,0);let d=T.m4.orthographic(0,this.gl.canvas.width,this.gl.canvas.height,0,-1,1);d=T.m4.translate(d,r,o,0),d=T.m4.scale(d,c,l,1),this.gl.uniformMatrix4fv(this.matrixLocation,!1,d);let g=T.m4.translation(s/i,n/e,0);g=T.m4.scale(g,h/i,a/e,1),this.gl.uniformMatrix4fv(this.textureMatrixLocation,!1,g),this.gl.uniform1i(this.textureLocation,0),this.gl.drawArrays(this.gl.TRIANGLES,0,6)}}drawPolygons(t,i){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.STATIC_DRAW),this.gl.viewport(0,0,window.innerWidth,window.innerHeight),this.gl.useProgram(this.program),this.gl.uniform2f(this.resolutionUniformLocation,window.innerWidth,window.innerHeight),this.gl.uniform4f(this.colorUniformLocation,1,0,i,1),this.gl.enableVertexAttribArray(this.positionLocation),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.vertexAttribPointer(this.positionLocation,2,this.gl.FLOAT,!1,0,0),this.gl.drawArrays(this.gl.TRIANGLES,0,3)}},I=class{constructor(){this.canvas=document.createElement("canvas"),this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.drawer=new v(this.canvas),this.objectList=[],this.toAddObjectList=[],this.toRemoveObjectList=[]}render(){this.drawer.clear(),this.objectList.forEach((t=>{t.draw(this.drawer)})),document.body.appendChild(this.canvas)}synchronize(){let t;this.toAddObjectList.forEach((t=>{this.objectList.push(t)})),this.toAddObjectList.length=0,this.toRemoveObjectList.forEach((i=>{t=this.objectList.indexOf(i),t>-1&&this.objectList.splice(t,1)})),this.toRemoveObjectList.length=0}addObject(t){this.toAddObjectList.push(t)}removeObject(t){this.toRemoveObjectList.push(t)}},_={CLOUD_SPRITE:{clip:{coor:{x:164,y:0},width:96,height:32,scale:.5},adjust:{x:0,y:0}},BIRD_SPRITE:[{clip:{coor:{x:262,y:16},width:88,height:64,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:354,y:4},width:88,height:56,scale:.5},adjust:{x:0,y:0}}],CACTUS_SPRITES:[{clip:{coor:{x:446,y:2},width:34,height:70,scale:.5},adjust:{x:0,y:14}},{clip:{coor:{x:480,y:2},width:68,height:70,scale:.5},adjust:{x:0,y:14}},{clip:{coor:{x:548,y:2},width:102,height:70,scale:.5},adjust:{x:0,y:14}},{clip:{coor:{x:652,y:2},width:50,height:100,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:702,y:2},width:48,height:100,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:752,y:2},width:98,height:100,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:850,y:2},width:102,height:100,scale:.5},adjust:{x:0,y:0}}],TREX_SPRITES:[{clip:{coor:{x:1516,y:4},width:84,height:90,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:1604,y:4},width:84,height:90,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:1868,y:38},width:114,height:56,scale:.5},adjust:{x:0,y:16}},{clip:{coor:{x:1986,y:38},width:114,height:56,scale:.5},adjust:{x:0,y:16}},{clip:{coor:{x:1340,y:4},width:84,height:90,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:1428,y:4},width:84,height:90,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:1692,y:4},width:84,height:90,scale:.5},adjust:{x:0,y:0}},{clip:{coor:{x:78,y:6},width:88,height:92,scale:.5},adjust:{x:0,y:0}}],GROUND_SPRITE:{clip:{coor:{x:0,y:102},width:2404,height:28,scale:.5},adjust:{x:0,y:0}},NUMBER_SPRITES:{0:{clip:{coor:{x:952,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},1:{clip:{coor:{x:974,y:0},width:20,height:26,scale:.5},adjust:{x:0,y:0}},2:{clip:{coor:{x:992,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},3:{clip:{coor:{x:1012,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},4:{clip:{coor:{x:1032,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},5:{clip:{coor:{x:1052,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},6:{clip:{coor:{x:1072,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},7:{clip:{coor:{x:1092,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},8:{clip:{coor:{x:1112,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}},9:{clip:{coor:{x:1132,y:0},width:22,height:26,scale:.5},adjust:{x:0,y:0}}},HI_SPRITE:{clip:{coor:{x:1152,y:0},width:42,height:26,scale:.5},adjust:{x:0,y:0}},GAMEOVER_SPRITE:{clip:{coor:{x:952,y:28},width:384,height:24,scale:.75},adjust:{x:0,y:0}},PLAY_BUTTON_SPRITE:{clip:{coor:{x:2,y:2},width:72,height:64,scale:.5},adjust:{x:0,y:0}}},A=class{constructor(){this.colliderList=[]}getDisplayLocation(){return this.canvasLocation}setColliderList(t){this.colliderList=t}setRigidBody(t){this.rigidBody=t}isCollied(t){for(let i=0;i<this.colliderList.length;i++)for(let e=0;e<t.colliderList.length;e++){let s,n,h,a;if(s=Object.assign({},this.colliderList[i].getOrigin()),s.x+=this.canvasLocation.x,s.y+=this.canvasLocation.y,n={x:s.x+this.colliderList[i].getWidth(),y:s.y+this.colliderList[i].getHeight()},h=Object.assign({},t.colliderList[e].getOrigin()),h.x+=t.canvasLocation.x,h.y+=t.canvasLocation.y,a={x:h.x+t.colliderList[e].getWidth(),y:h.y+t.colliderList[e].getHeight()},s.x!==n.x&&s.y!==n.y&&h.x!==a.x&&h.y!==a.y&&!(n.x-h.x<0||a.x-s.x<0||n.y-h.y<0||a.y-s.y<0))return!0}return!1}},j=class extends A{constructor(t,i,e,s){super(),this.sprite=Object.assign({},t),this.canvasLocation=Object.assign({},i)}draw(t){this.tex||(this.tex=t.loadImageAndCreateTextureInfo("./assets/images/trex-sprites.png")),t.draw(this.tex,this.sprite.coor.x,this.sprite.coor.y,this.sprite.width,this.sprite.height,this.canvasLocation.x,this.canvasLocation.y,this.sprite.width*this.sprite.scale,this.sprite.height*this.sprite.scale)}getDisplayWidth(){return this.sprite.width*this.sprite.scale}getDisplayHeight(){return this.sprite.height*this.sprite.scale}},b=class{constructor(t,i,e){this.origin=Object.assign({},t),this.width=i,this.height=e}getOrigin(){return this.origin}getWidth(){return this.width}getHeight(){return this.height}setOrigin(t){this.origin=t}setWidth(t){this.width=t}setHeight(t){this.height=t}},B=class{constructor(t,i,e){this.velocityX=t,this.velocityY=i,this.shiftX=0,this.shiftY=0,this.accelerationEffect=!1,this.mass=e}getVelocityX(){return this.velocityX}getVelocityY(){return this.velocityY}setVelocityX(t){this.velocityX=t}setVelocityY(t){this.velocityY=t}getMass(){return this.mass}setMass(t){this.mass=t}getAccelerationEffect(){return this.accelerationEffect}setAccelerationEffect(t){this.accelerationEffect=t}getShiftX(){return this.shiftX}setShiftX(t){this.shiftX=t}getShiftY(){return this.shiftY}setShiftY(t){this.shiftY=t}},P=class extends j{constructor(t,i){let e=T.randomInt(0,6),s=_.CACTUS_SPRITES[e].adjust;(i=Object.assign({},i)).x+=s.x,i.y+=s.y,super(_.CACTUS_SPRITES[e].clip,i,c,l),this.setColliderList([new b({x:0,y:0},this.getDisplayWidth(),this.getDisplayHeight())]),this.setRigidBody(new B(c,l,0)),this.scene=t}handleInput(t){}update(t){let i=Math.floor(t/1e3*c);this.canvasLocation.x-=i,this.canvasLocation.x+this.getDisplayWidth()<0&&this.scene.removeObject(this)}isCollided(t){let i,e,s,n,h,a;return i=5,e=16,s=this.canvasLocation,n={x:s.x+this.getDisplayWidth(),y:s.y+this.getDisplayHeight()},h=t.getDisplayLocation(),a={x:h.x+t.getDisplayWidth(),y:h.y+t.getDisplayHeight()},!(s.x===n.x||s.y===n.y||h.x===a.x||h.y===a.y||-h.x+n.x<5||-s.x+a.x<16||-h.y+n.y<5||-s.y+a.y<16)}},O=class{constructor(t){this.scene=t}},D=class extends O{constructor(t){super(t)}spawn(){this.scene.addObject(new P(this.scene,d))}},M=class extends j{constructor(t,i){super(_.CLOUD_SPRITE.clip,i,x,f),this.scene=t}handleInput(t){}update(t){let i=Math.floor(t/1e3*x);this.canvasLocation.x-=i,this.canvasLocation.x+this.getDisplayWidth()<0&&this.scene.removeObject(this)}},C=class extends O{constructor(t){super(t)}spawn(){this.scene.addObject(new M(this.scene,L))}},X=class extends A{constructor(t,i){super(),this.spriteList=[],this.content="",this.letterGap=1}draw(t){this.tex||(this.tex=t.loadImageAndCreateTextureInfo("./assets/images/trex-sprites.png"));let i=0;this.spriteList.forEach((e=>{t.draw(this.tex,e.coor.x,e.coor.y,e.width,e.height,this.canvasLocation.x+i,this.canvasLocation.y,e.width*e.scale,e.height*e.scale),i+=e.width*e.scale+this.letterGap}))}getContent(){return this.content}setContent(t){this.content=t,this.contentToSpriteList()}},U=class extends X{constructor(){super(0,0),this.canvasLocation={x:550,y:250},this.setContent("GAMEOVER")}handleInput(t){}update(t){}contentToSpriteList(){this.spriteList.length=0,this.spriteList.push(_.GAMEOVER_SPRITE.clip)}},Y=class extends j{constructor(t){super(_.PLAY_BUTTON_SPRITE.clip,t,c,l),this.canvasLocation={x:680,y:300}}handleInput(t){}update(t){}};class F extends j{constructor(t,i){super(_.GROUND_SPRITE.clip,i,u,p),this.scene=t}handleInput(t){}update(t){let i=Math.floor(t/1e3*u);if(this.canvasLocation.x-=i,this.canvasLocation.x+this.getDisplayWidth()<0){let t=Object.assign({},{x:this.canvasLocation.x+3*this.getDisplayWidth(),y:this.canvasLocation.y});this.scene.addObject(new F(this.scene,t)),this.scene.removeObject(this)}}}const H=F,G=class extends X{constructor(){super(0,0),this.canvasLocation={x:1080,y:260},this.setContent("00000"),this.changingInterval=S}handleInput(t){}update(t){if(this.changingInterval-t<0){this.changingInterval=S;let t=Number(this.getContent());t+=1;let i,e="";for(let s=4;s>-1;s--)i=Math.floor(t/10**s),t%=10**s,e+=String(i);this.setContent(e)}else this.changingInterval-=t}reload(){this.setContent("00000")}contentToSpriteList(){this.spriteList.length=0;for(let t=0;t<this.content.length;t++)this.spriteList.push(_.NUMBER_SPRITES[this.content[t]].clip)}},V=class extends X{constructor(){super(0,0),this.canvasLocation={x:985,y:260},this.setContent("00000")}handleInput(t){}update(t){}reload(){const t=window.localStorage.getItem("high_score");console.log(t),t?this.setContent(t):this.setContent("00000")}contentToSpriteList(){this.spriteList.length=0;for(let t=0;t<this.content.length;t++)this.spriteList.push(_.NUMBER_SPRITES[this.content[t]].clip)}},W=class extends X{constructor(){super(0,0),this.canvasLocation={x:950,y:260},this.setContent("HI")}handleInput(t){}update(t){}contentToSpriteList(){this.spriteList.length=0,this.spriteList.push(_.HI_SPRITE.clip)}},N=class extends A{constructor(t){super(),this.highPoint=new V,this.currentPoint=new G,this.HI=new W}handleInput(t){}update(t){this.highPoint.update(t),this.currentPoint.update(t),this.HI.update(t),this.updateHighScore()}draw(t){this.highPoint.draw(t),this.currentPoint.draw(t),this.HI.draw(t)}reload(){this.highPoint.reload(),this.currentPoint.reload()}updateHighScore(){Number(this.highPoint.getContent())<Number(this.currentPoint.getContent())&&window.localStorage.setItem("high_score",this.currentPoint.getContent())}},k=40,z=38,K=32,q=class{constructor(){}},J=[_.TREX_SPRITES[0].clip,_.TREX_SPRITES[1].clip],Q=[_.TREX_SPRITES[2].clip,_.TREX_SPRITES[3].clip],Z=[_.TREX_SPRITES[4].clip];class $ extends q{constructor(){super()}handleInput(t,i){if(i instanceof KeyboardEvent&&"keydown"==i.type)if(i.keyCode==k){t.setSpriteList(Q);let i=Object.assign({},r);i.x+=_.TREX_SPRITES[2].adjust.x,i.y+=_.TREX_SPRITES[2].adjust.y,t.setDisplayLocation(i),t.setState(new tt)}else i.keyCode!=K&&i.keyCode!=z||i.repeat||(t.setSpriteList(Z),t.setState(new it),t.setVelocityY(h),t.setAccelerationEffect(!0))}update(t,i){t.animate(i)}}class tt extends q{constructor(){super()}handleInput(t,i){if(i instanceof KeyboardEvent&&i.keyCode==k&&"keyup"==i.type){t.setSpriteList(J);let i=Object.assign({},r);i.x+=_.TREX_SPRITES[0].adjust.x,i.y+=_.TREX_SPRITES[0].adjust.y,t.setDisplayLocation(i),t.setState(new $)}}update(t,i){t.animate(i)}}class it extends q{constructor(){super()}handleInput(t,i){}update(t,i){t.animate(i);let e=t.getShiftY(),s=Object.assign({},t.getDisplayLocation());s.y-e>370||s.y<0?(s.y=370,t.setSpriteList(J),t.setDisplayLocation(s),t.setVelocityY(0),t.setAccelerationEffect(!1),t.setState(new $)):(s.y-=e,t.setDisplayLocation(s))}}const et={TRexDuckingState:tt,TRexGameOverState:class extends q{constructor(){super()}handleInput(t,i){}update(t,i){t.animate(i)}},TRexJumpingState:it,TRexRunningState:$},st=class extends A{constructor(t,i,e,s){super(),this.spriteList=t,this.canvasLocation=Object.assign({},i),this.changingInterval=o,this.remainingInterval=this.changingInterval,this.index=0}animate(t){this.remainingInterval<0?(this.remainingInterval=this.changingInterval,this.index=(this.index+1)%this.spriteList.length):this.remainingInterval-=t}draw(t){this.tex||(this.tex=t.loadImageAndCreateTextureInfo("./assets/images/trex-sprites.png")),t.draw(this.tex,this.spriteList[this.index].coor.x,this.spriteList[this.index].coor.y,this.spriteList[this.index].width,this.spriteList[this.index].height,this.canvasLocation.x,this.canvasLocation.y,this.spriteList[this.index].width*this.spriteList[this.index].scale,this.spriteList[this.index].height*this.spriteList[this.index].scale)}setSpriteList(t){this.index=0,this.spriteList=t}getCurrentSprite(){return this.spriteList[this.index]}getDisplayWidth(){return this.spriteList[this.index].width*this.spriteList[this.index].scale}getDisplayHeight(){return this.spriteList[this.index].height*this.spriteList[this.index].scale}},nt=[_.TREX_SPRITES[0].clip,_.TREX_SPRITES[1].clip],ht=class extends st{constructor(t,i){super(nt,i,s,n),this.physicsManager=t,this.setColliderList([new b({x:0,y:0},this.getDisplayWidth(),this.getDisplayHeight())]),this.setRigidBody(new B(s,n,0)),this.rigidBody.setAccelerationEffect(!1),this.physicsManager.addRigidBodyList(this.rigidBody),this.state=new et.TRexRunningState}handleInput(t){this.state.handleInput(this,t)}update(t){this.state.update(this,t)}setDisplayLocation(t){this.canvasLocation=t}setState(t){this.state=t}getVelocityX(){return this.rigidBody.getVelocityX()}setVelocityX(t){this.rigidBody.setVelocityX(t)}getVelocityY(){return this.rigidBody.getVelocityY()}setVelocityY(t){this.rigidBody.setVelocityY(t)}getShiftX(){return this.rigidBody.getShiftX()}getShiftY(){return this.rigidBody.getShiftY()}getSprite(){return this.getCurrentSprite()}setAccelerationEffect(t){this.rigidBody.setAccelerationEffect(t)}},at="play",rt="gameover",ot=class extends I{constructor(t){super(),this.physicsManager=t,this.sceneState=at,this.mouseStatus="down"}handleInput(t){if(this.sceneState==at)this.objectList.forEach((i=>{i.handleInput(t)}));else if(this.sceneState==rt&&t instanceof MouseEvent){let i=this.replayButton.getDisplayLocation();t.x>=i.x&&t.y>=i.y&&t.x<=i.x+this.replayButton.getDisplayWidth()&&t.y<=i.y+this.replayButton.getDisplayHeight()?"mousedown"==t.type?"down"==this.mouseStatus&&(this.mouseStatus="up"):"mouseup"==t.type&&"up"==this.mouseStatus&&(this.sceneState=at,this.reload()):this.mouseStatus="down"}}update(t){if(this.sceneState==at){this.objectList.forEach((i=>{i.update(t)})),this.cactusGeneratingInterval-t<0?(this.cactusGeneratingInterval=g,this.cactusManager.spawn()):this.cactusGeneratingInterval-=t,this.cloudGeneratingInterval-t<0?(this.cloudGeneratingInterval=w,this.cloudManager.spawn()):this.cloudGeneratingInterval-=t;for(let t=0;t<this.objectList.length;t++)if(this.objectList[t]instanceof ht){for(let i=0;i<this.objectList.length;i++)if(this.objectList[i]instanceof P&&this.objectList[t].isCollied(this.objectList[i])){this.sceneState=rt,this.addObject(this.gameOver),this.addObject(this.replayButton);break}break}}}reload(){this.objectList.length=0,this.cactusGeneratingInterval=g,this.cloudGeneratingInterval=w,this.addObject(new P(this,d)),this.addObject(new M(this,L));let t,i=y;for(let e=0;e<3;e++)t=new H(this,i),this.addObject(t),i={x:i.x+t.getDisplayWidth(),y:i.y};this.scoreBoard.reload(),this.addObject(this.scoreBoard),this.addObject(new ht(this.physicsManager,r))}setup(){this.cactusManager=new D(this),this.cactusGeneratingInterval=g,this.cloudManager=new C(this),this.cloudGeneratingInterval=w,this.gameOver=new U,this.replayButton=new Y({x:0,y:0}),this.scoreBoard=new N(R),this.addObject(new P(this,d)),this.addObject(new M(this,L));let t,i=y;for(let e=0;e<3;e++)t=new H(this,i),this.addObject(t),i={x:i.x+t.getDisplayWidth(),y:i.y};this.addObject(this.scoreBoard),this.addObject(new ht(this.physicsManager,r))}};let ct=new class extends t{constructor(){super()}setup(){this.physicsManager=new e,this.physicsManager.setAccelerationX(0),this.physicsManager.setAccelerationY(a),this.scene=new ot(this.physicsManager),this.scene.setup(),this.inputHandler=new i(this.scene),this.inputHandler.addEventListener("keydown"),this.inputHandler.addEventListener("keyup"),this.inputHandler.addEventListener("mousedown"),this.inputHandler.addEventListener("mouseup")}};ct.setup(),ct.run()})();